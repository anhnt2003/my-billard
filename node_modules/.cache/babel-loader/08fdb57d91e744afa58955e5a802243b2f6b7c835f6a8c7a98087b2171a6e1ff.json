{"ast":null,"code":"var _jsxFileName = \"/Users/mac/work space /my-billard/src/components/PlayerSetup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerSetup = () => {\n  _s();\n  const [playerCount, setPlayerCount] = useState(2);\n  const [players, setPlayers] = useState([{\n    id: 1,\n    name: ''\n  }, {\n    id: 2,\n    name: ''\n  }]);\n  const handlePlayerCountChange = e => {\n    const count = Math.max(2, Math.min(8, parseInt(e.target.value) || 2));\n    setPlayerCount(count);\n    setPlayers(prevPlayers => {\n      if (count > prevPlayers.length) {\n        // Add new players\n        return [...prevPlayers, ...Array.from({\n          length: count - prevPlayers.length\n        }, (_, index) => ({\n          id: prevPlayers.length + index + 1,\n          name: ''\n        }))];\n      } else {\n        // Remove excess players\n        return prevPlayers.slice(0, count);\n      }\n    });\n  };\n  const handlePlayerNameChange = (id, name) => {\n    setPlayers(prevPlayers => prevPlayers.map(player => player.id === id ? {\n      ...player,\n      name\n    } : player));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-setup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-count-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"playerCount\",\n        children: \"Number of Players (2-8):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"playerCount\",\n        min: \"2\",\n        max: \"8\",\n        value: playerCount,\n        onChange: handlePlayerCountChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-names\",\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `player${player.id}`,\n          children: [\"Player \", player.id, \" Name:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: `player${player.id}`,\n          value: player.name,\n          onChange: e => handlePlayerNameChange(player.id, e.target.value),\n          placeholder: `Enter Player ${player.id} name`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerSetup, \"0bnk9/Nq6jTEgIt5V73KFDW34VI=\");\n_c = PlayerSetup;\nexport default PlayerSetup;\nvar _c;\n$RefreshReg$(_c, \"PlayerSetup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PlayerSetup","_s","playerCount","setPlayerCount","players","setPlayers","id","name","handlePlayerCountChange","e","count","Math","max","min","parseInt","target","value","prevPlayers","length","Array","from","_","index","slice","handlePlayerNameChange","map","player","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/mac/work space /my-billard/src/components/PlayerSetup.tsx"],"sourcesContent":["import React, {\n  ChangeEvent,\n  useState,\n} from 'react';\n\ninterface Player {\n  id: number;\n  name: string;\n}\n\nconst PlayerSetup: React.FC = () => {\n  const [playerCount, setPlayerCount] = useState<number>(2);\n  const [players, setPlayers] = useState<Player[]>([\n    { id: 1, name: '' },\n    { id: 2, name: '' },\n  ]);\n\n  const handlePlayerCountChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const count = Math.max(2, Math.min(8, parseInt(e.target.value) || 2));\n    setPlayerCount(count);\n    \n    setPlayers(prevPlayers => {\n      if (count > prevPlayers.length) {\n        // Add new players\n        return [\n          ...prevPlayers,\n          ...Array.from({ length: count - prevPlayers.length }, (_, index) => ({\n            id: prevPlayers.length + index + 1,\n            name: ''\n          }))\n        ];\n      } else {\n        // Remove excess players\n        return prevPlayers.slice(0, count);\n      }\n    });\n  };\n\n  const handlePlayerNameChange = (id: number, name: string) => {\n    setPlayers(prevPlayers =>\n      prevPlayers.map(player =>\n        player.id === id ? { ...player, name } : player\n      )\n    );\n  };\n\n  return (\n    <div className=\"player-setup\">\n      <div className=\"player-count-input\">\n        <label htmlFor=\"playerCount\">Number of Players (2-8):</label>\n        <input\n          type=\"number\"\n          id=\"playerCount\"\n          min=\"2\"\n          max=\"8\"\n          value={playerCount}\n          onChange={handlePlayerCountChange}\n        />\n      </div>\n      \n      <div className=\"player-names\">\n        {players.map(player => (\n          <div key={player.id} className=\"player-input\">\n            <label htmlFor={`player${player.id}`}>Player {player.id} Name:</label>\n            <input\n              type=\"text\"\n              id={`player${player.id}`}\n              value={player.name}\n              onChange={(e) => handlePlayerNameChange(player.id, e.target.value)}\n              placeholder={`Enter Player ${player.id} name`}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerSetup; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}