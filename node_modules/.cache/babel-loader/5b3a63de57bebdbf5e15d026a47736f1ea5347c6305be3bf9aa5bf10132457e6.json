{"ast":null,"code":"var _jsxFileName = \"/Users/mac/work space /my-billard/src/components/ScoreTracker.tsx\",\n  _s = $RefreshSig$();\nimport './ScoreTracker.css';\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreTracker = ({\n  players,\n  onScoreUpdate\n}) => {\n  _s();\n  const [roundScores, setRoundScores] = useState({});\n  const [currentRound, setCurrentRound] = useState(1);\n  const [history, setHistory] = useState([]);\n  const [editingRound, setEditingRound] = useState(null);\n  const [editScores, setEditScores] = useState({});\n  const handleScoreChange = (playerId, value) => {\n    setRoundScores(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n  };\n  const handleEditScoreChange = (playerId, value) => {\n    setEditScores(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n  };\n  const saveGameToJson = roundHistory => {\n    const gameData = {\n      players: players,\n      rounds: roundHistory,\n      lastUpdate: new Date().toISOString()\n    };\n    const dataStr = JSON.stringify(gameData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', `billard_game_${new Date().toISOString().split('T')[0]}.json`);\n    linkElement.click();\n    toast.success('Game data saved successfully!');\n  };\n  const submitScores = () => {\n    // Check if any scores are entered\n    const hasScores = Object.values(roundScores).some(score => score !== '');\n    if (!hasScores) {\n      toast.error('Please enter at least one score before submitting');\n      return;\n    }\n    const roundData = {\n      roundNumber: currentRound,\n      scores: []\n    };\n    const updatedPlayers = players.map(player => {\n      const roundScore = parseInt(roundScores[player.id] || '0') || 0;\n      const newTotalScore = player.totalScore + roundScore;\n      roundData.scores.push({\n        playerId: player.id,\n        playerName: player.name,\n        roundScore: roundScore,\n        totalScore: newTotalScore\n      });\n      return {\n        ...player,\n        totalScore: newTotalScore\n      };\n    });\n\n    // Update history with the new round\n    setHistory(prev => [...prev, roundData]);\n\n    // Update current round number\n    setCurrentRound(prev => prev + 1);\n\n    // Update parent component with new player scores\n    onScoreUpdate(updatedPlayers);\n\n    // Reset round scores\n    setRoundScores({});\n\n    // Show success message with round summary\n    const roundSummary = roundData.scores.map(score => `${score.playerName}: ${score.roundScore >= 0 ? '+' : ''}${score.roundScore}`).join(', ');\n    toast.success(`Round ${currentRound} completed: ${roundSummary}`);\n  };\n  const handleUndoLastRound = () => {\n    if (history.length === 0) {\n      toast.error('No rounds to undo');\n      return;\n    }\n\n    // Get the last round\n    const lastRound = history[history.length - 1];\n\n    // Revert player scores\n    const revertedPlayers = players.map(player => {\n      const lastRoundScore = lastRound.scores.find(s => s.playerId === player.id);\n      return {\n        ...player,\n        totalScore: player.totalScore - ((lastRoundScore === null || lastRoundScore === void 0 ? void 0 : lastRoundScore.roundScore) || 0)\n      };\n    });\n\n    // Update history and current round\n    setHistory(prev => prev.slice(0, -1));\n    setCurrentRound(prev => prev - 1);\n\n    // Update parent component with reverted scores\n    onScoreUpdate(revertedPlayers);\n\n    // Show success message\n    toast.success('Last round undone successfully');\n  };\n  const startEditingRound = roundNumber => {\n    setEditingRound(roundNumber);\n    const round = history.find(r => r.roundNumber === roundNumber);\n    if (round) {\n      const initialEditScores = round.scores.reduce((acc, score) => ({\n        ...acc,\n        [score.playerId]: score.roundScore.toString()\n      }), {});\n      setEditScores(initialEditScores);\n    }\n  };\n  const saveRoundEdit = roundNumber => {\n    const round = history.find(r => r.roundNumber === roundNumber);\n    if (!round) return;\n\n    // Calculate the difference in scores\n    const updatedPlayers = players.map(player => {\n      var _round$scores$find;\n      const oldScore = ((_round$scores$find = round.scores.find(s => s.playerId === player.id)) === null || _round$scores$find === void 0 ? void 0 : _round$scores$find.roundScore) || 0;\n      const newScore = parseInt(editScores[player.id] || '0') || 0;\n      const scoreDiff = newScore - oldScore;\n      return {\n        ...player,\n        totalScore: player.totalScore + scoreDiff\n      };\n    });\n\n    // Update the round in history\n    const updatedRound = {\n      ...round,\n      scores: round.scores.map(score => {\n        var _updatedPlayers$find;\n        return {\n          ...score,\n          roundScore: parseInt(editScores[score.playerId] || '0') || 0,\n          totalScore: ((_updatedPlayers$find = updatedPlayers.find(p => p.id === score.playerId)) === null || _updatedPlayers$find === void 0 ? void 0 : _updatedPlayers$find.totalScore) || 0\n        };\n      })\n    };\n    setHistory(prev => prev.map(r => r.roundNumber === roundNumber ? updatedRound : r));\n    onScoreUpdate(updatedPlayers);\n    setEditingRound(null);\n    setEditScores({});\n    toast.success(`Round ${roundNumber} updated successfully`);\n  };\n  const cancelEdit = () => {\n    setEditingRound(null);\n    setEditScores({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"round-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Round \", currentRound]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-game-button\",\n          onClick: () => saveGameToJson(history),\n          children: \"Save Game Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"undo-button\",\n          onClick: handleUndoLastRound,\n          children: \"Undo Last Round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-inputs\",\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"total-score\",\n            children: [\"Total: \", player.totalScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: roundScores[player.id] || '',\n            onChange: e => handleScoreChange(player.id, e.target.value),\n            placeholder: \"Enter score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-scores\",\n      onClick: submitScores,\n      children: [\"Submit Round \", currentRound, \" Scores\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"round-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Round History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-list\",\n        children: history.map(round => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Round \", round.roundNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), editingRound === round.roundNumber ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save-edit-button\",\n                onClick: () => saveRoundEdit(round.roundNumber),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel-edit-button\",\n                onClick: cancelEdit,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: () => startEditingRound(round.roundNumber),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"round-scores\",\n            children: round.scores.map(score => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-round-score\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-name\",\n                children: score.playerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this), editingRound === round.roundNumber ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editScores[score.playerId] || '',\n                onChange: e => handleEditScoreChange(score.playerId, e.target.value),\n                className: \"edit-score-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"score-change\",\n                children: [score.roundScore >= 0 ? '+' : '', score.roundScore]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"round-total\",\n                children: [\"= \", score.totalScore]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }, this)]\n            }, score.playerId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this)]\n        }, round.roundNumber, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreTracker, \"AgPZQEmt7pbZcIwyfTyeDPJgJ9w=\");\n_c = ScoreTracker;\nexport default ScoreTracker;\nvar _c;\n$RefreshReg$(_c, \"ScoreTracker\");","map":{"version":3,"names":["React","useState","toast","jsxDEV","_jsxDEV","ScoreTracker","players","onScoreUpdate","_s","roundScores","setRoundScores","currentRound","setCurrentRound","history","setHistory","editingRound","setEditingRound","editScores","setEditScores","handleScoreChange","playerId","value","prev","handleEditScoreChange","saveGameToJson","roundHistory","gameData","rounds","lastUpdate","Date","toISOString","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","document","createElement","setAttribute","split","click","success","submitScores","hasScores","Object","values","some","score","error","roundData","roundNumber","scores","updatedPlayers","map","player","roundScore","parseInt","id","newTotalScore","totalScore","push","playerName","name","roundSummary","join","handleUndoLastRound","length","lastRound","revertedPlayers","lastRoundScore","find","s","slice","startEditingRound","round","r","initialEditScores","reduce","acc","toString","saveRoundEdit","_round$scores$find","oldScore","newScore","scoreDiff","updatedRound","_updatedPlayers$find","p","cancelEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/mac/work space /my-billard/src/components/ScoreTracker.tsx"],"sourcesContent":["import './ScoreTracker.css';\n\nimport React, { useState } from 'react';\n\nimport { toast } from 'react-toastify';\n\nimport { RoundHistory } from '../types/RoundHistory';\nimport { ScoreTrackerProps } from '../types/ScoreTrackerProps';\n\nconst ScoreTracker: React.FC<ScoreTrackerProps> = ({ players, onScoreUpdate }) => {\n  const [roundScores, setRoundScores] = useState<{ [key: number]: string }>({});\n  const [currentRound, setCurrentRound] = useState<number>(1);\n  const [history, setHistory] = useState<RoundHistory[]>([]);\n  const [editingRound, setEditingRound] = useState<number | null>(null);\n  const [editScores, setEditScores] = useState<{ [key: number]: string }>({});\n\n  const handleScoreChange = (playerId: number, value: string) => {\n    setRoundScores(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n  };\n\n  const handleEditScoreChange = (playerId: number, value: string) => {\n    setEditScores(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n  };\n\n  const saveGameToJson = (roundHistory: RoundHistory[]) => {\n    const gameData = {\n      players: players,\n      rounds: roundHistory,\n      lastUpdate: new Date().toISOString()\n    };\n\n    const dataStr = JSON.stringify(gameData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', `billard_game_${new Date().toISOString().split('T')[0]}.json`);\n    linkElement.click();\n    toast.success('Game data saved successfully!');\n  };\n\n  const submitScores = () => {\n    // Check if any scores are entered\n    const hasScores = Object.values(roundScores).some(score => score !== '');\n    if (!hasScores) {\n      toast.error('Please enter at least one score before submitting');\n      return;\n    }\n\n    const roundData: RoundHistory = {\n      roundNumber: currentRound,\n      scores: []\n    };\n\n    const updatedPlayers = players.map(player => {\n      const roundScore = parseInt(roundScores[player.id] || '0') || 0;\n      const newTotalScore = player.totalScore + roundScore;\n      \n      roundData.scores.push({\n        playerId: player.id,\n        playerName: player.name,\n        roundScore: roundScore,\n        totalScore: newTotalScore\n      });\n\n      return {\n        ...player,\n        totalScore: newTotalScore\n      };\n    });\n\n    // Update history with the new round\n    setHistory(prev => [...prev, roundData]);\n    \n    // Update current round number\n    setCurrentRound(prev => prev + 1);\n    \n    // Update parent component with new player scores\n    onScoreUpdate(updatedPlayers);\n    \n    // Reset round scores\n    setRoundScores({});\n    \n    // Show success message with round summary\n    const roundSummary = roundData.scores\n      .map(score => `${score.playerName}: ${score.roundScore >= 0 ? '+' : ''}${score.roundScore}`)\n      .join(', ');\n    toast.success(`Round ${currentRound} completed: ${roundSummary}`);\n  };\n\n  const handleUndoLastRound = () => {\n    if (history.length === 0) {\n      toast.error('No rounds to undo');\n      return;\n    }\n\n    // Get the last round\n    const lastRound = history[history.length - 1];\n    \n    // Revert player scores\n    const revertedPlayers = players.map(player => {\n      const lastRoundScore = lastRound.scores.find(s => s.playerId === player.id);\n      return {\n        ...player,\n        totalScore: player.totalScore - (lastRoundScore?.roundScore || 0)\n      };\n    });\n\n    // Update history and current round\n    setHistory(prev => prev.slice(0, -1));\n    setCurrentRound(prev => prev - 1);\n    \n    // Update parent component with reverted scores\n    onScoreUpdate(revertedPlayers);\n    \n    // Show success message\n    toast.success('Last round undone successfully');\n  };\n\n  const startEditingRound = (roundNumber: number) => {\n    setEditingRound(roundNumber);\n    const round = history.find(r => r.roundNumber === roundNumber);\n    if (round) {\n      const initialEditScores = round.scores.reduce((acc, score) => ({\n        ...acc,\n        [score.playerId]: score.roundScore.toString()\n      }), {});\n      setEditScores(initialEditScores);\n    }\n  };\n\n  const saveRoundEdit = (roundNumber: number) => {\n    const round = history.find(r => r.roundNumber === roundNumber);\n    if (!round) return;\n\n    // Calculate the difference in scores\n    const updatedPlayers = players.map(player => {\n      const oldScore = round.scores.find(s => s.playerId === player.id)?.roundScore || 0;\n      const newScore = parseInt(editScores[player.id] || '0') || 0;\n      const scoreDiff = newScore - oldScore;\n      \n      return {\n        ...player,\n        totalScore: player.totalScore + scoreDiff\n      };\n    });\n\n    // Update the round in history\n    const updatedRound: RoundHistory = {\n      ...round,\n      scores: round.scores.map(score => ({\n        ...score,\n        roundScore: parseInt(editScores[score.playerId] || '0') || 0,\n        totalScore: updatedPlayers.find(p => p.id === score.playerId)?.totalScore || 0\n      }))\n    };\n\n    setHistory(prev => prev.map(r => r.roundNumber === roundNumber ? updatedRound : r));\n    onScoreUpdate(updatedPlayers);\n    setEditingRound(null);\n    setEditScores({});\n    toast.success(`Round ${roundNumber} updated successfully`);\n  };\n\n  const cancelEdit = () => {\n    setEditingRound(null);\n    setEditScores({});\n  };\n\n  return (\n    <div className=\"score-tracker\">\n      <div className=\"round-info\">\n        <h2>Round {currentRound}</h2>\n        <div className=\"round-controls\">\n          <button \n            className=\"save-game-button\"\n            onClick={() => saveGameToJson(history)}\n          >\n            Save Game Data\n          </button>\n          {history.length > 0 && (\n            <button \n              className=\"undo-button\"\n              onClick={handleUndoLastRound}\n            >\n              Undo Last Round\n            </button>\n          )}\n        </div>\n      </div>\n\n      <div className=\"score-inputs\">\n        {players.map(player => (\n          <div key={player.id} className=\"score-input-group\">\n            <div className=\"player-info\">\n              <span className=\"player-name\">{player.name}</span>\n              <span className=\"total-score\">Total: {player.totalScore}</span>\n            </div>\n            <div className=\"score-input\">\n              <input\n                type=\"number\"\n                value={roundScores[player.id] || ''}\n                onChange={(e) => handleScoreChange(player.id, e.target.value)}\n                placeholder=\"Enter score\"\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <button \n        className=\"submit-scores\"\n        onClick={submitScores}\n      >\n        Submit Round {currentRound} Scores\n      </button>\n\n      {history.length > 0 && (\n        <div className=\"round-history\">\n          <h3>Round History</h3>\n          <div className=\"history-list\">\n            {history.map((round) => (\n              <div key={round.roundNumber} className=\"history-item\">\n                <div className=\"history-header\">\n                  <h4>Round {round.roundNumber}</h4>\n                  {editingRound === round.roundNumber ? (\n                    <div className=\"edit-controls\">\n                      <button \n                        className=\"save-edit-button\"\n                        onClick={() => saveRoundEdit(round.roundNumber)}\n                      >\n                        Save\n                      </button>\n                      <button \n                        className=\"cancel-edit-button\"\n                        onClick={cancelEdit}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  ) : (\n                    <button \n                      className=\"edit-button\"\n                      onClick={() => startEditingRound(round.roundNumber)}\n                    >\n                      Edit\n                    </button>\n                  )}\n                </div>\n                <div className=\"round-scores\">\n                  {round.scores.map((score) => (\n                    <div key={score.playerId} className=\"player-round-score\">\n                      <span className=\"player-name\">{score.playerName}</span>\n                      {editingRound === round.roundNumber ? (\n                        <input\n                          type=\"number\"\n                          value={editScores[score.playerId] || ''}\n                          onChange={(e) => handleEditScoreChange(score.playerId, e.target.value)}\n                          className=\"edit-score-input\"\n                        />\n                      ) : (\n                        <span className=\"score-change\">\n                          {score.roundScore >= 0 ? '+' : ''}{score.roundScore}\n                        </span>\n                      )}\n                      <span className=\"round-total\">= {score.totalScore}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScoreTracker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}