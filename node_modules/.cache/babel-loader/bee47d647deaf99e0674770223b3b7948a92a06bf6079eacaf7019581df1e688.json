{"ast":null,"code":"var _jsxFileName = \"/Users/mac/work space /my-billard/src/components/PlayerSetup.tsx\",\n  _s = $RefreshSig$();\nimport './PlayerSetup.css';\nimport React, { useState } from 'react';\nimport ScoreTracker from './ScoreTracker';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerSetup = () => {\n  _s();\n  const [playerCount, setPlayerCount] = useState(2);\n  const [players, setPlayers] = useState([{\n    id: 1,\n    name: '',\n    totalScore: 0\n  }, {\n    id: 2,\n    name: '',\n    totalScore: 0\n  }]);\n  const [gameStarted, setGameStarted] = useState(false);\n  const updatePlayerCount = newCount => {\n    const count = Math.max(2, Math.min(8, newCount));\n    setPlayerCount(count);\n    setPlayers(prevPlayers => {\n      if (count > prevPlayers.length) {\n        // Add new players\n        return [...prevPlayers, ...Array.from({\n          length: count - prevPlayers.length\n        }, (_, index) => ({\n          id: prevPlayers.length + index + 1,\n          name: '',\n          totalScore: 0\n        }))];\n      } else {\n        // Remove excess players\n        return prevPlayers.slice(0, count);\n      }\n    });\n  };\n  const handlePlayerNameChange = (id, name) => {\n    setPlayers(prevPlayers => prevPlayers.map(player => player.id === id ? {\n      ...player,\n      name\n    } : player));\n  };\n  const handleStartGame = () => {\n    if (players.some(player => !player.name.trim())) {\n      alert('Please enter names for all players before starting the game.');\n      return;\n    }\n    setGameStarted(true);\n  };\n  const handleScoreUpdate = updatedPlayers => {\n    setPlayers(updatedPlayers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-setup\",\n    children: !gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-count-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number of Players:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"count-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updatePlayerCount(playerCount - 1),\n            disabled: playerCount <= 2,\n            className: \"count-button\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-count\",\n            children: playerCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updatePlayerCount(playerCount + 1),\n            disabled: playerCount >= 8,\n            className: \"count-button\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-names\",\n        children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `player${player.id}`,\n            children: [\"Player \", player.id, \" Name:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: `player${player.id}`,\n            value: player.name,\n            onChange: e => handlePlayerNameChange(player.id, e.target.value),\n            placeholder: `Enter Player ${player.id} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-game-button\",\n        onClick: handleStartGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(ScoreTracker, {\n      players: players,\n      onScoreUpdate: handleScoreUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerSetup, \"/Pz1ILDJRG7PLBpFZX3MUGCk4Ng=\");\n_c = PlayerSetup;\nexport default PlayerSetup;\nvar _c;\n$RefreshReg$(_c, \"PlayerSetup\");","map":{"version":3,"names":["React","useState","ScoreTracker","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerSetup","_s","playerCount","setPlayerCount","players","setPlayers","id","name","totalScore","gameStarted","setGameStarted","updatePlayerCount","newCount","count","Math","max","min","prevPlayers","length","Array","from","_","index","slice","handlePlayerNameChange","map","player","handleStartGame","some","trim","alert","handleScoreUpdate","updatedPlayers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","htmlFor","type","value","onChange","e","target","placeholder","onScoreUpdate","_c","$RefreshReg$"],"sources":["/Users/mac/work space /my-billard/src/components/PlayerSetup.tsx"],"sourcesContent":["import './PlayerSetup.css';\n\nimport React, { useState } from 'react';\n\nimport ScoreTracker from './ScoreTracker';\n\ninterface Player {\n  id: number;\n  name: string;\n  totalScore: number;\n}\n\nconst PlayerSetup: React.FC = () => {\n  const [playerCount, setPlayerCount] = useState<number>(2);\n  const [players, setPlayers] = useState<Player[]>([\n    { id: 1, name: '', totalScore: 0 },\n    { id: 2, name: '', totalScore: 0 },\n  ]);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  const updatePlayerCount = (newCount: number) => {\n    const count = Math.max(2, Math.min(8, newCount));\n    setPlayerCount(count);\n    \n    setPlayers(prevPlayers => {\n      if (count > prevPlayers.length) {\n        // Add new players\n        return [\n          ...prevPlayers,\n          ...Array.from({ length: count - prevPlayers.length }, (_, index) => ({\n            id: prevPlayers.length + index + 1,\n            name: '',\n            totalScore: 0\n          }))\n        ];\n      } else {\n        // Remove excess players\n        return prevPlayers.slice(0, count);\n      }\n    });\n  };\n\n  const handlePlayerNameChange = (id: number, name: string) => {\n    setPlayers(prevPlayers =>\n      prevPlayers.map(player =>\n        player.id === id ? { ...player, name } : player\n      )\n    );\n  };\n\n  const handleStartGame = () => {\n    if (players.some(player => !player.name.trim())) {\n      alert('Please enter names for all players before starting the game.');\n      return;\n    }\n    setGameStarted(true);\n  };\n\n  const handleScoreUpdate = (updatedPlayers: Player[]) => {\n    setPlayers(updatedPlayers);\n  };\n\n  return (\n    <div className=\"player-setup\">\n      {!gameStarted ? (\n        <>\n          <div className=\"player-count-control\">\n            <label>Number of Players:</label>\n            <div className=\"count-buttons\">\n              <button \n                onClick={() => updatePlayerCount(playerCount - 1)}\n                disabled={playerCount <= 2}\n                className=\"count-button\"\n              >\n                -\n              </button>\n              <span className=\"player-count\">{playerCount}</span>\n              <button \n                onClick={() => updatePlayerCount(playerCount + 1)}\n                disabled={playerCount >= 8}\n                className=\"count-button\"\n              >\n                +\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"player-names\">\n            {players.map(player => (\n              <div key={player.id} className=\"player-input\">\n                <label htmlFor={`player${player.id}`}>Player {player.id} Name:</label>\n                <input\n                  type=\"text\"\n                  id={`player${player.id}`}\n                  value={player.name}\n                  onChange={(e) => handlePlayerNameChange(player.id, e.target.value)}\n                  placeholder={`Enter Player ${player.id} name`}\n                />\n              </div>\n            ))}\n          </div>\n\n          <button \n            className=\"start-game-button\"\n            onClick={handleStartGame}\n          >\n            Start Game\n          </button>\n        </>\n      ) : (\n        <ScoreTracker \n          players={players}\n          onScoreUpdate={handleScoreUpdate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PlayerSetup; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}