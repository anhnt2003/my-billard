{"ast":null,"code":"var _jsxFileName = \"/Users/mac/work space /my-billard/src/components/ScoreTracker.tsx\",\n  _s = $RefreshSig$();\nimport './ScoreTracker.css';\nimport React, { useEffect, useState } from 'react';\nimport { loadGameData, saveGameData } from '../services/gameDataService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreTracker = ({\n  players,\n  onScoreUpdate\n}) => {\n  _s();\n  const [roundScores, setRoundScores] = useState({});\n  const [currentRound, setCurrentRound] = useState(1);\n  const [history, setHistory] = useState([]);\n\n  // Load saved game data when component mounts\n  useEffect(() => {\n    const loadSavedData = async () => {\n      const savedData = await loadGameData();\n      if (savedData) {\n        setHistory(savedData.rounds);\n        setCurrentRound(savedData.rounds.length + 1);\n        onScoreUpdate(savedData.players);\n      }\n    };\n    loadSavedData();\n  }, [onScoreUpdate]);\n  const handleScoreChange = (playerId, value) => {\n    setRoundScores(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n  };\n  const submitScores = async () => {\n    const roundData = {\n      roundNumber: currentRound,\n      scores: []\n    };\n    const updatedPlayers = players.map(player => {\n      const roundScore = parseInt(roundScores[player.id] || '0') || 0;\n      const newTotalScore = player.totalScore + roundScore;\n      roundData.scores.push({\n        playerId: player.id,\n        playerName: player.name,\n        roundScore: roundScore,\n        totalScore: newTotalScore\n      });\n      return {\n        ...player,\n        totalScore: newTotalScore\n      };\n    });\n    const newHistory = [...history, roundData];\n    setHistory(newHistory);\n    setCurrentRound(prev => prev + 1);\n    onScoreUpdate(updatedPlayers);\n    setRoundScores({}); // Reset round scores after submission\n\n    // Save game data after each round\n    await saveGameData({\n      players: updatedPlayers,\n      rounds: newHistory,\n      lastUpdate: new Date().toISOString()\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"round-info\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Round \", currentRound]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-inputs\",\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"total-score\",\n            children: [\"Total: \", player.totalScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: roundScores[player.id] || '',\n            onChange: e => handleScoreChange(player.id, e.target.value),\n            placeholder: \"Enter score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-scores\",\n      onClick: submitScores,\n      children: [\"Submit Round \", currentRound, \" Scores\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"round-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Round History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-list\",\n        children: history.map(round => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Round \", round.roundNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"round-scores\",\n            children: round.scores.map(score => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-round-score\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-name\",\n                children: score.playerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"score-change\",\n                children: [score.roundScore >= 0 ? '+' : '', score.roundScore]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"round-total\",\n                children: [\"= \", score.totalScore]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 23\n              }, this)]\n            }, score.playerId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, round.roundNumber, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreTracker, \"rRxg/2UHa+6JHy6YVI24vBvg49s=\");\n_c = ScoreTracker;\nexport default ScoreTracker;\nvar _c;\n$RefreshReg$(_c, \"ScoreTracker\");","map":{"version":3,"names":["React","useEffect","useState","loadGameData","saveGameData","jsxDEV","_jsxDEV","ScoreTracker","players","onScoreUpdate","_s","roundScores","setRoundScores","currentRound","setCurrentRound","history","setHistory","loadSavedData","savedData","rounds","length","handleScoreChange","playerId","value","prev","submitScores","roundData","roundNumber","scores","updatedPlayers","map","player","roundScore","parseInt","id","newTotalScore","totalScore","push","playerName","name","newHistory","lastUpdate","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","round","score","_c","$RefreshReg$"],"sources":["/Users/mac/work space /my-billard/src/components/ScoreTracker.tsx"],"sourcesContent":["import './ScoreTracker.css';\n\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\n\nimport {\n  loadGameData,\n  RoundHistory,\n  saveGameData,\n} from '../services/gameDataService';\n\ninterface Player {\n  id: number;\n  name: string;\n  totalScore: number;\n}\n\ninterface ScoreTrackerProps {\n  players: Player[];\n  onScoreUpdate: (updatedPlayers: Player[]) => void;\n}\n\nconst ScoreTracker: React.FC<ScoreTrackerProps> = ({ players, onScoreUpdate }) => {\n  const [roundScores, setRoundScores] = useState<{ [key: number]: string }>({});\n  const [currentRound, setCurrentRound] = useState<number>(1);\n  const [history, setHistory] = useState<RoundHistory[]>([]);\n\n  // Load saved game data when component mounts\n  useEffect(() => {\n    const loadSavedData = async () => {\n      const savedData = await loadGameData();\n      if (savedData) {\n        setHistory(savedData.rounds);\n        setCurrentRound(savedData.rounds.length + 1);\n        onScoreUpdate(savedData.players);\n      }\n    };\n    loadSavedData();\n  }, [onScoreUpdate]);\n\n  const handleScoreChange = (playerId: number, value: string) => {\n    setRoundScores(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n  };\n\n  const submitScores = async () => {\n    const roundData: RoundHistory = {\n      roundNumber: currentRound,\n      scores: []\n    };\n\n    const updatedPlayers = players.map(player => {\n      const roundScore = parseInt(roundScores[player.id] || '0') || 0;\n      const newTotalScore = player.totalScore + roundScore;\n      \n      roundData.scores.push({\n        playerId: player.id,\n        playerName: player.name,\n        roundScore: roundScore,\n        totalScore: newTotalScore\n      });\n\n      return {\n        ...player,\n        totalScore: newTotalScore\n      };\n    });\n\n    const newHistory = [...history, roundData];\n    setHistory(newHistory);\n    setCurrentRound(prev => prev + 1);\n    onScoreUpdate(updatedPlayers);\n    setRoundScores({}); // Reset round scores after submission\n\n    // Save game data after each round\n    await saveGameData({\n      players: updatedPlayers,\n      rounds: newHistory,\n      lastUpdate: new Date().toISOString()\n    });\n  };\n\n  return (\n    <div className=\"score-tracker\">\n      <div className=\"round-info\">\n        <h2>Round {currentRound}</h2>\n      </div>\n\n      <div className=\"score-inputs\">\n        {players.map(player => (\n          <div key={player.id} className=\"score-input-group\">\n            <div className=\"player-info\">\n              <span className=\"player-name\">{player.name}</span>\n              <span className=\"total-score\">Total: {player.totalScore}</span>\n            </div>\n            <div className=\"score-input\">\n              <input\n                type=\"number\"\n                value={roundScores[player.id] || ''}\n                onChange={(e) => handleScoreChange(player.id, e.target.value)}\n                placeholder=\"Enter score\"\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <button \n        className=\"submit-scores\"\n        onClick={submitScores}\n      >\n        Submit Round {currentRound} Scores\n      </button>\n\n      {history.length > 0 && (\n        <div className=\"round-history\">\n          <h3>Round History</h3>\n          <div className=\"history-list\">\n            {history.map((round) => (\n              <div key={round.roundNumber} className=\"history-item\">\n                <h4>Round {round.roundNumber}</h4>\n                <div className=\"round-scores\">\n                  {round.scores.map((score) => (\n                    <div key={score.playerId} className=\"player-round-score\">\n                      <span className=\"player-name\">{score.playerName}</span>\n                      <span className=\"score-change\">\n                        {score.roundScore >= 0 ? '+' : ''}{score.roundScore}\n                      </span>\n                      <span className=\"round-total\">= {score.totalScore}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScoreTracker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}