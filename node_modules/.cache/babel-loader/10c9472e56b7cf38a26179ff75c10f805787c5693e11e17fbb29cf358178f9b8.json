{"ast":null,"code":"var _jsxFileName = \"/Users/mac/work space /my-billard/src/components/ScoreTracker.tsx\",\n  _s = $RefreshSig$();\nimport './ScoreTracker.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreTracker = ({\n  players,\n  onScoreUpdate\n}) => {\n  _s();\n  const [roundScores, setRoundScores] = useState({});\n  const handleScoreChange = (playerId, value) => {\n    setRoundScores(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n  };\n  const submitScores = () => {\n    const updatedPlayers = players.map(player => {\n      const roundScore = parseInt(roundScores[player.id] || '0') || 0;\n      return {\n        ...player,\n        totalScore: player.totalScore + roundScore\n      };\n    });\n    onScoreUpdate(updatedPlayers);\n    setRoundScores({}); // Reset round scores after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-inputs\",\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"total-score\",\n            children: [\"Total: \", player.totalScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: roundScores[player.id] || '',\n            onChange: e => handleScoreChange(player.id, e.target.value),\n            placeholder: \"Enter score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-scores\",\n      onClick: submitScores,\n      children: \"Add Round Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreTracker, \"XynrD/ork5gHArlz7TutxQejgGo=\");\n_c = ScoreTracker;\nexport default ScoreTracker;\nvar _c;\n$RefreshReg$(_c, \"ScoreTracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ScoreTracker","players","onScoreUpdate","_s","roundScores","setRoundScores","handleScoreChange","playerId","value","prev","submitScores","updatedPlayers","map","player","roundScore","parseInt","id","totalScore","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/mac/work space /my-billard/src/components/ScoreTracker.tsx"],"sourcesContent":["import './ScoreTracker.css';\n\nimport React, { useState } from 'react';\n\ninterface Player {\n  id: number;\n  name: string;\n  totalScore: number;\n}\n\ninterface ScoreTrackerProps {\n  players: Player[];\n  onScoreUpdate: (updatedPlayers: Player[]) => void;\n}\n\nconst ScoreTracker: React.FC<ScoreTrackerProps> = ({ players, onScoreUpdate }) => {\n  const [roundScores, setRoundScores] = useState<{ [key: number]: string }>({});\n\n  const handleScoreChange = (playerId: number, value: string) => {\n    setRoundScores(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n  };\n\n  const submitScores = () => {\n    const updatedPlayers = players.map(player => {\n      const roundScore = parseInt(roundScores[player.id] || '0') || 0;\n      return {\n        ...player,\n        totalScore: player.totalScore + roundScore\n      };\n    });\n\n    onScoreUpdate(updatedPlayers);\n    setRoundScores({}); // Reset round scores after submission\n  };\n\n  return (\n    <div className=\"score-tracker\">\n      <div className=\"score-inputs\">\n        {players.map(player => (\n          <div key={player.id} className=\"score-input-group\">\n            <div className=\"player-info\">\n              <span className=\"player-name\">{player.name}</span>\n              <span className=\"total-score\">Total: {player.totalScore}</span>\n            </div>\n            <div className=\"score-input\">\n              <input\n                type=\"number\"\n                value={roundScores[player.id] || ''}\n                onChange={(e) => handleScoreChange(player.id, e.target.value)}\n                placeholder=\"Enter score\"\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <button \n        className=\"submit-scores\"\n        onClick={submitScores}\n      >\n        Add Round Scores\n      </button>\n    </div>\n  );\n};\n\nexport default ScoreTracker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}