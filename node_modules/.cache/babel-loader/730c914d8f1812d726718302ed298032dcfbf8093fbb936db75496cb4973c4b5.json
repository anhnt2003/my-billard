{"ast":null,"code":"import { readFile, writeFile } from 'fs/promises';\nimport path from 'path';\nconst DATA_FILE_PATH = path.join(process.cwd(), 'src', 'data', 'gameData.json');\nexport const saveGameData = async data => {\n  try {\n    await writeFile(DATA_FILE_PATH, JSON.stringify(data, null, 2));\n  } catch (error) {\n    console.error('Error saving game data:', error);\n  }\n};\nexport const loadGameData = async () => {\n  try {\n    const data = await readFile(DATA_FILE_PATH, 'utf-8');\n    return JSON.parse(data);\n  } catch (error) {\n    // Return null if file doesn't exist or there's an error\n    return null;\n  }\n};","map":{"version":3,"names":["readFile","writeFile","path","DATA_FILE_PATH","join","process","cwd","saveGameData","data","JSON","stringify","error","console","loadGameData","parse"],"sources":["/Users/mac/work space /my-billard/src/services/gameDataService.ts"],"sourcesContent":["import {\n  readFile,\n  writeFile,\n} from 'fs/promises';\nimport path from 'path';\n\nexport interface GameData {\n  players: Player[];\n  rounds: RoundHistory[];\n  lastUpdate: string;\n}\n\nexport interface Player {\n  id: number;\n  name: string;\n  totalScore: number;\n}\n\nexport interface RoundHistory {\n  roundNumber: number;\n  scores: {\n    playerId: number;\n    playerName: string;\n    roundScore: number;\n    totalScore: number;\n  }[];\n}\n\nconst DATA_FILE_PATH = path.join(process.cwd(), 'src', 'data', 'gameData.json');\n\nexport const saveGameData = async (data: GameData): Promise<void> => {\n  try {\n    await writeFile(DATA_FILE_PATH, JSON.stringify(data, null, 2));\n  } catch (error) {\n    console.error('Error saving game data:', error);\n  }\n};\n\nexport const loadGameData = async (): Promise<GameData | null> => {\n  try {\n    const data = await readFile(DATA_FILE_PATH, 'utf-8');\n    return JSON.parse(data);\n  } catch (error) {\n    // Return null if file doesn't exist or there's an error\n    return null;\n  }\n}; "],"mappings":"AAAA,SACEA,QAAQ,EACRC,SAAS,QACJ,aAAa;AACpB,OAAOC,IAAI,MAAM,MAAM;AAwBvB,MAAMC,cAAc,GAAGD,IAAI,CAACE,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,eAAe,CAAC;AAE/E,OAAO,MAAMC,YAAY,GAAG,MAAOC,IAAc,IAAoB;EACnE,IAAI;IACF,MAAMP,SAAS,CAACE,cAAc,EAAEM,IAAI,CAACC,SAAS,CAACF,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EAChE,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAsC;EAChE,IAAI;IACF,MAAML,IAAI,GAAG,MAAMR,QAAQ,CAACG,cAAc,EAAE,OAAO,CAAC;IACpD,OAAOM,IAAI,CAACK,KAAK,CAACN,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd;IACA,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}