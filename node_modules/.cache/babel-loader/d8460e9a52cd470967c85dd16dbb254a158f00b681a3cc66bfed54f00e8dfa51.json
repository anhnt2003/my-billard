{"ast":null,"code":"var _jsxFileName = \"/Users/mac/work space /my-billard/src/components/ScoreTracker.tsx\",\n  _s = $RefreshSig$();\nimport './ScoreTracker.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreTracker = ({\n  players,\n  onScoreUpdate\n}) => {\n  _s();\n  const [roundScores, setRoundScores] = useState({});\n  const [currentRound, setCurrentRound] = useState(1);\n  const [history, setHistory] = useState([]);\n  const handleScoreChange = (playerId, value) => {\n    setRoundScores(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n  };\n  const saveGameToJson = roundHistory => {\n    const gameData = {\n      players: players,\n      rounds: roundHistory,\n      lastUpdate: new Date().toISOString()\n    };\n    const dataStr = JSON.stringify(gameData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', `billard_game_${new Date().toISOString().split('T')[0]}.json`);\n    linkElement.click();\n  };\n  const submitScores = () => {\n    const roundData = {\n      roundNumber: currentRound,\n      scores: []\n    };\n    const updatedPlayers = players.map(player => {\n      const roundScore = parseInt(roundScores[player.id] || '0') || 0;\n      const newTotalScore = player.totalScore + roundScore;\n      roundData.scores.push({\n        playerId: player.id,\n        playerName: player.name,\n        roundScore: roundScore,\n        totalScore: newTotalScore\n      });\n      return {\n        ...player,\n        totalScore: newTotalScore\n      };\n    });\n    setHistory(prev => [...prev, roundData]);\n    setCurrentRound(prev => prev + 1);\n    onScoreUpdate(updatedPlayers);\n    setRoundScores({}); // Reset round scores after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"round-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Round \", currentRound]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-game-button\",\n        onClick: () => saveGameToJson(history),\n        children: \"Save Game Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-inputs\",\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"total-score\",\n            children: [\"Total: \", player.totalScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: roundScores[player.id] || '',\n            onChange: e => handleScoreChange(player.id, e.target.value),\n            placeholder: \"Enter score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-scores\",\n      onClick: submitScores,\n      children: [\"Submit Round \", currentRound, \" Scores\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"round-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Round History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-list\",\n        children: history.map(round => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Round \", round.roundNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"round-scores\",\n            children: round.scores.map(score => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-round-score\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-name\",\n                children: score.playerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"score-change\",\n                children: [score.roundScore >= 0 ? '+' : '', score.roundScore]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"round-total\",\n                children: [\"= \", score.totalScore]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this)]\n            }, score.playerId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, round.roundNumber, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreTracker, \"h0ZS73XbJDNOo8kyJpNRfRA2P2A=\");\n_c = ScoreTracker;\nexport default ScoreTracker;\nvar _c;\n$RefreshReg$(_c, \"ScoreTracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ScoreTracker","players","onScoreUpdate","_s","roundScores","setRoundScores","currentRound","setCurrentRound","history","setHistory","handleScoreChange","playerId","value","prev","saveGameToJson","roundHistory","gameData","rounds","lastUpdate","Date","toISOString","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","document","createElement","setAttribute","split","click","submitScores","roundData","roundNumber","scores","updatedPlayers","map","player","roundScore","parseInt","id","newTotalScore","totalScore","push","playerName","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","placeholder","length","round","score","_c","$RefreshReg$"],"sources":["/Users/mac/work space /my-billard/src/components/ScoreTracker.tsx"],"sourcesContent":["import './ScoreTracker.css';\n\nimport React, { useState } from 'react';\n\nimport { Player } from '../types/Player';\n\ninterface RoundHistory {\n  roundNumber: number;\n  scores: {\n    playerId: number;\n    playerName: string;\n    roundScore: number;\n    totalScore: number;\n  }[];\n}\n\ninterface ScoreTrackerProps {\n  players: Player[];\n  onScoreUpdate: (updatedPlayers: Player[]) => void;\n}\n\nconst ScoreTracker: React.FC<ScoreTrackerProps> = ({ players, onScoreUpdate }) => {\n  const [roundScores, setRoundScores] = useState<{ [key: number]: string }>({});\n  const [currentRound, setCurrentRound] = useState<number>(1);\n  const [history, setHistory] = useState<RoundHistory[]>([]);\n\n  const handleScoreChange = (playerId: number, value: string) => {\n    setRoundScores(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n  };\n\n  const saveGameToJson = (roundHistory: RoundHistory[]) => {\n    const gameData = {\n      players: players,\n      rounds: roundHistory,\n      lastUpdate: new Date().toISOString()\n    };\n\n    const dataStr = JSON.stringify(gameData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', `billard_game_${new Date().toISOString().split('T')[0]}.json`);\n    linkElement.click();\n  };\n\n  const submitScores = () => {\n    const roundData: RoundHistory = {\n      roundNumber: currentRound,\n      scores: []\n    };\n\n    const updatedPlayers = players.map(player => {\n      const roundScore = parseInt(roundScores[player.id] || '0') || 0;\n      const newTotalScore = player.totalScore + roundScore;\n      \n      roundData.scores.push({\n        playerId: player.id,\n        playerName: player.name,\n        roundScore: roundScore,\n        totalScore: newTotalScore\n      });\n\n      return {\n        ...player,\n        totalScore: newTotalScore\n      };\n    });\n\n    setHistory(prev => [...prev, roundData]);\n    setCurrentRound(prev => prev + 1);\n    onScoreUpdate(updatedPlayers);\n    setRoundScores({}); // Reset round scores after submission\n  };\n\n  return (\n    <div className=\"score-tracker\">\n      <div className=\"round-info\">\n        <h2>Round {currentRound}</h2>\n        <button \n          className=\"save-game-button\"\n          onClick={() => saveGameToJson(history)}\n        >\n          Save Game Data\n        </button>\n      </div>\n\n      <div className=\"score-inputs\">\n        {players.map(player => (\n          <div key={player.id} className=\"score-input-group\">\n            <div className=\"player-info\">\n              <span className=\"player-name\">{player.name}</span>\n              <span className=\"total-score\">Total: {player.totalScore}</span>\n            </div>\n            <div className=\"score-input\">\n              <input\n                type=\"number\"\n                value={roundScores[player.id] || ''}\n                onChange={(e) => handleScoreChange(player.id, e.target.value)}\n                placeholder=\"Enter score\"\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <button \n        className=\"submit-scores\"\n        onClick={submitScores}\n      >\n        Submit Round {currentRound} Scores\n      </button>\n\n      {history.length > 0 && (\n        <div className=\"round-history\">\n          <h3>Round History</h3>\n          <div className=\"history-list\">\n            {history.map((round) => (\n              <div key={round.roundNumber} className=\"history-item\">\n                <h4>Round {round.roundNumber}</h4>\n                <div className=\"round-scores\">\n                  {round.scores.map((score) => (\n                    <div key={score.playerId} className=\"player-round-score\">\n                      <span className=\"player-name\">{score.playerName}</span>\n                      <span className=\"score-change\">\n                        {score.roundScore >= 0 ? '+' : ''}{score.roundScore}\n                      </span>\n                      <span className=\"round-total\">= {score.totalScore}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScoreTracker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}