{"ast":null,"code":"var _jsxFileName = \"/Users/mac/work space /my-billard/src/components/PlayerSetup.tsx\",\n  _s = $RefreshSig$();\nimport './PlayerSetup.css';\nimport React, { useEffect, useState } from 'react';\nimport { loadGameData } from '../services/gameDataService';\nimport ScoreTracker from './ScoreTracker';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerSetup = () => {\n  _s();\n  const [playerCount, setPlayerCount] = useState(2);\n  const [players, setPlayers] = useState([{\n    id: 1,\n    name: '',\n    totalScore: 0\n  }, {\n    id: 2,\n    name: '',\n    totalScore: 0\n  }]);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Load saved game data when component mounts\n  useEffect(() => {\n    const loadSavedData = async () => {\n      const savedData = await loadGameData();\n      if (savedData) {\n        setPlayers(savedData.players);\n        setPlayerCount(savedData.players.length);\n        // If there's saved data, we can optionally start in game mode\n        if (savedData.players.every(player => player.name.trim())) {\n          setGameStarted(true);\n        }\n      }\n    };\n    loadSavedData();\n  }, []);\n  const updatePlayerCount = newCount => {\n    const count = Math.max(2, Math.min(8, newCount));\n    setPlayerCount(count);\n    setPlayers(prevPlayers => {\n      if (count > prevPlayers.length) {\n        // Add new players while preserving existing players' data\n        return [...prevPlayers, ...Array.from({\n          length: count - prevPlayers.length\n        }, (_, index) => ({\n          id: prevPlayers.length + index + 1,\n          name: '',\n          totalScore: 0\n        }))];\n      } else {\n        // Remove excess players\n        return prevPlayers.slice(0, count);\n      }\n    });\n  };\n  const handlePlayerNameChange = (id, name) => {\n    setPlayers(prevPlayers => prevPlayers.map(player => player.id === id ? {\n      ...player,\n      name\n    } : player));\n  };\n  const handleStartGame = () => {\n    const emptyNames = players.filter(player => !player.name.trim());\n    if (emptyNames.length > 0) {\n      alert('Please enter names for all players before starting the game.');\n      return;\n    }\n    setGameStarted(true);\n  };\n  const handleBackToSetup = () => {\n    setGameStarted(false);\n  };\n  const handleScoreUpdate = updatedPlayers => {\n    setPlayers(updatedPlayers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-setup\",\n    children: !gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-count-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number of Players:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"count-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updatePlayerCount(playerCount - 1),\n            disabled: playerCount <= 2,\n            className: \"count-button\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-count\",\n            children: playerCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updatePlayerCount(playerCount + 1),\n            disabled: playerCount >= 8,\n            className: \"count-button\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-names\",\n        children: players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `player${player.id}`,\n            children: [\"Player \", player.id, \" Name:\", player.totalScore !== 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"current-score\",\n              children: [\" (Current Score: \", player.totalScore, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: `player${player.id}`,\n            value: player.name,\n            onChange: e => handlePlayerNameChange(player.id, e.target.value),\n            placeholder: `Enter Player ${player.id} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-game-button\",\n        onClick: handleStartGame,\n        children: players.some(p => p.totalScore !== 0) ? 'Continue Game' : 'Start Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBackToSetup,\n        children: \"\\u2190 Back to Player Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScoreTracker, {\n        players: players,\n        onScoreUpdate: handleScoreUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerSetup, \"QpkqhYU7QbKU01z17LBKnExDbrk=\");\n_c = PlayerSetup;\nexport default PlayerSetup;\nvar _c;\n$RefreshReg$(_c, \"PlayerSetup\");","map":{"version":3,"names":["React","useEffect","useState","loadGameData","ScoreTracker","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerSetup","_s","playerCount","setPlayerCount","players","setPlayers","id","name","totalScore","gameStarted","setGameStarted","loadSavedData","savedData","length","every","player","trim","updatePlayerCount","newCount","count","Math","max","min","prevPlayers","Array","from","_","index","slice","handlePlayerNameChange","map","handleStartGame","emptyNames","filter","alert","handleBackToSetup","handleScoreUpdate","updatedPlayers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","htmlFor","type","value","onChange","e","target","placeholder","some","p","onScoreUpdate","_c","$RefreshReg$"],"sources":["/Users/mac/work space /my-billard/src/components/PlayerSetup.tsx"],"sourcesContent":["import './PlayerSetup.css';\n\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\n\nimport {\n  loadGameData,\n  Player,\n} from '../services/gameDataService';\nimport ScoreTracker from './ScoreTracker';\n\nconst PlayerSetup: React.FC = () => {\n  const [playerCount, setPlayerCount] = useState<number>(2);\n  const [players, setPlayers] = useState<Player[]>([\n    { id: 1, name: '', totalScore: 0 },\n    { id: 2, name: '', totalScore: 0 },\n  ]);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Load saved game data when component mounts\n  useEffect(() => {\n    const loadSavedData = async () => {\n      const savedData = await loadGameData();\n      if (savedData) {\n        setPlayers(savedData.players);\n        setPlayerCount(savedData.players.length);\n        // If there's saved data, we can optionally start in game mode\n        if (savedData.players.every(player => player.name.trim())) {\n          setGameStarted(true);\n        }\n      }\n    };\n    loadSavedData();\n  }, []);\n\n  const updatePlayerCount = (newCount: number) => {\n    const count = Math.max(2, Math.min(8, newCount));\n    setPlayerCount(count);\n    \n    setPlayers(prevPlayers => {\n      if (count > prevPlayers.length) {\n        // Add new players while preserving existing players' data\n        return [\n          ...prevPlayers,\n          ...Array.from({ length: count - prevPlayers.length }, (_, index) => ({\n            id: prevPlayers.length + index + 1,\n            name: '',\n            totalScore: 0\n          }))\n        ];\n      } else {\n        // Remove excess players\n        return prevPlayers.slice(0, count);\n      }\n    });\n  };\n\n  const handlePlayerNameChange = (id: number, name: string) => {\n    setPlayers(prevPlayers =>\n      prevPlayers.map(player =>\n        player.id === id ? { ...player, name } : player\n      )\n    );\n  };\n\n  const handleStartGame = () => {\n    const emptyNames = players.filter(player => !player.name.trim());\n    if (emptyNames.length > 0) {\n      alert('Please enter names for all players before starting the game.');\n      return;\n    }\n    setGameStarted(true);\n  };\n\n  const handleBackToSetup = () => {\n    setGameStarted(false);\n  };\n\n  const handleScoreUpdate = (updatedPlayers: Player[]) => {\n    setPlayers(updatedPlayers);\n  };\n\n  return (\n    <div className=\"player-setup\">\n      {!gameStarted ? (\n        <>\n          <div className=\"player-count-control\">\n            <label>Number of Players:</label>\n            <div className=\"count-buttons\">\n              <button \n                onClick={() => updatePlayerCount(playerCount - 1)}\n                disabled={playerCount <= 2}\n                className=\"count-button\"\n              >\n                -\n              </button>\n              <span className=\"player-count\">{playerCount}</span>\n              <button \n                onClick={() => updatePlayerCount(playerCount + 1)}\n                disabled={playerCount >= 8}\n                className=\"count-button\"\n              >\n                +\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"player-names\">\n            {players.map(player => (\n              <div key={player.id} className=\"player-input\">\n                <label htmlFor={`player${player.id}`}>\n                  Player {player.id} Name:\n                  {player.totalScore !== 0 && \n                    <span className=\"current-score\"> (Current Score: {player.totalScore})</span>\n                  }\n                </label>\n                <input\n                  type=\"text\"\n                  id={`player${player.id}`}\n                  value={player.name}\n                  onChange={(e) => handlePlayerNameChange(player.id, e.target.value)}\n                  placeholder={`Enter Player ${player.id} name`}\n                />\n              </div>\n            ))}\n          </div>\n\n          <button \n            className=\"start-game-button\"\n            onClick={handleStartGame}\n          >\n            {players.some(p => p.totalScore !== 0) ? 'Continue Game' : 'Start Game'}\n          </button>\n        </>\n      ) : (\n        <>\n          <button \n            className=\"back-button\"\n            onClick={handleBackToSetup}\n          >\n            ← Back to Player Setup\n          </button>\n          <ScoreTracker \n            players={players}\n            onScoreUpdate={handleScoreUpdate}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PlayerSetup; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}